@page "/register"
@using MiljøFestivalv2.Shared
@using System.Net.Http.Json
@using Client.Services
@using Microsoft.AspNetCore.Components.Forms
@inject NavigationManager NavManager
@inject HttpClient Http

<h3>Register</h3>

<div style="display: flex; justify-content: center">
	<EditForm EditContext="@bEditContext" class="row p-3" OnValidSubmit="@HandleValidSubmit">
		<DataAnnotationsValidator />
		<ValidationSummary />
		<div style="display: grid; grid-template-columns: min-content 200px; row-gap: 8px; column-gap: 16px; align-items: center" class="container input-grid">
			<label style="white-space: nowrap">
					Fulde Navn:
				</label>
				<InputText id="fulde_navn" @bind-Value="bruger.fulde_navn" required />
				<label>
					Email:
				</label>
				<InputText id="email" @bind-Value="bruger.email" required />
				<label>Telefonnummer:</label>
				<InputNumber id="telefon_nummer" @bind-Value="bruger.telefon_nummer" required />
				<label>
					Fødselsdag:
				</label>
				<InputDate id="fødseldag" @bind-Value="bruger.fødselsdag" required />
				<label>
					CPR-nummer:
				</label>
				<InputText id="cpr_number" @bind-Value="bruger.cpr_nummer" required />
				<label>
					Brugernavn:
				</label>
				<InputText id="brugernavn" @bind-Value="bruger.brugernavn" required />
				<label>
					Password:
				</label>
				<InputText id="password" @bind-Value="bruger.password" required />
			<button type="submit">Register</button>
			<button @onclick="BackToLogin">Back to Login</button>
		</div>
	</EditForm>
</div>

@code {
	// Laver en privat instans af EditContext-klasse, som bruges til at håndtere formularer og validering i Blazor.
	private EditContext bEditContext;

	Bruger bruger = new Bruger();

	// Injecter brugerservice interfacet så metoderne derfra kan bruges
	[Inject]
	public IBrugerService BrugerService { get; set; }

	// Denne metode kaldes, når komponenten initialiseres. Den opretter en ny EditContext med 'bruger'-objektet.
	protected override void OnInitialized()
	{
		bEditContext = new EditContext(bruger);
	}

	private async Task HandleValidSubmit()
	{
		await BrugerService.TilføjBruger(bruger);
		NavManager.NavigateTo("/confirmation");
	}

	// Laver den indtastede information om til datetime, så det kan sendes til databasen
	// og giver automatisk 00:00:00 Tidspunkt med, så man ikke selv skal indtaste det
	private void HåndterFødselsdag(DateOnly NyDato)
	{
		bruger.fødselsdag = NyDato.ToDateTime(TimeOnly.MinValue);
	}

	private void BackToLogin()
	{
		NavManager.NavigateTo("/");
	}

}
